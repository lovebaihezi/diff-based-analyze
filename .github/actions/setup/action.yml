name: Set Up
description: Install Zig, Alpine, libgit2, zlib, libclang
runs:
  using: composite
  steps:
    - name: Setup Base ENV
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install wget tar gzip bash git curl file autoconf automake cmake ninja-build libzstd-dev build-essential libc++-dev libstdc++-11-dev llvm-dev libclang-dev clang-tools
    - uses: goto-bus-stop/setup-zig@v2.2.0
      with:
        version: 0.13.0
    - uses: extractions/setup-just@v2
    - name: Install LLVM
      shell: bash
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 18
        # echo DIFF_LLVM_SHARED_LIB="LLVM-18" >> $GITHUB_ENV
        # echo DIFF_clang_SHARED_LIB="clang-18" >> $GITHUB_ENV
        sudo ln -s /usr/lib/llvm-18/lib/libclang-18.so.1 /usr/lib/libclang.so
        sudo ln -s /usr/lib/llvm-18/lib/libLLVM-18.so /usr/lib/libLLVM.so
    - name: Check Zig ENV
      shell: bash
      run: |
        zig env
    - name: Build libgit2, zlib
      shell: bash
      run: |
        echo CC="${{ github.workspace }}/scripts/zig-cc" >> $GITHUB_ENV
        echo CXX="${{ github.workspace }}/scripts/zig-cxx" >> $GITHUB_ENV
        just install-libgit2 && just build-libgit2
        just install-zlib && just build-zlib
    - name: Run zig fmt
      shell: bash
      run: zig fmt --check .
    - name: Pull DataRace Bench
      shell: bash
      run: |
        git clone https://github.com/LLNL/dataracebench.git
    - uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Setup CC, CXX using LLVM-18
      shell: bash
      run: |
        echo CC="/usr/bin/clang-18" >> $GITHUB_ENV
        echo CXX="/usr/bin/clang-cpp-18" >> $GITHUB_ENV
    - uses: Homebrew/actions/setup-homebrew@master
    - uses: actions/setup-node@v4
      with:
        node-version: 22
    - name: Install Ikos
      shell: bash
      run: |
        brew install nasa-sw-vnv/core/ikos
    - name: Install Infer
      shell: bash
      run: |
        VERSION=1.2.0; \
        curl -sSL "https://github.com/facebook/infer/releases/download/v$VERSION/infer-linux64-v$VERSION.tar.xz" \
        | sudo tar -C /opt -xJ && \
        sudo ln -s "/opt/infer-linux64-v$VERSION/bin/infer" /usr/local/bin/infer
    # - name: Corepack check
    #   shell: bash
    #   run: |
    #     corepack enable
    #     cd ${{ github.workspace }}
    #     corepack prepare

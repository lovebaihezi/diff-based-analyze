[package]
name = "visualize-log"
version = "0.1.0"
authors = ["BoWen Chai <lovebaihezi@gmail.com>"]
edition = "2021"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.76"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[dependencies]
egui = "0.28.1"
eframe = { version = "0.28.1", default-features = false, features = [
    "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "wgpu",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "wayland",
    "puffin",
] }
wgpu = { version = "*", features = ["webgpu", "webgl"] }
log = "0.4.22"
polars = { version = "0.41.3", features = [
    "serde",
    "serde-lazy",
    "lazy",
    "simd",
    "avx512",
    "performant",
    "temporal",
    "json",
    "strings",
    "regex",
    "rows",
    "pivot"
] }
rayon = "1.10.0"
regex = "1.10.5"
# You only need serde if you want app persistence:
serde = { version = "1.0.203", features = ["derive"] }
serde_json = { version = "1.0.120" }
egui_plot = "0.28.1"
ehttp = "0.5.0"
dashmap = "6.0.1"
flume = "0.11.0"
anyhow = { version = "1.0.86", features = ["backtrace"] }
egui_extras = { version = "*", features = ["all_loaders"] }
image = { version = "0.25", features = [
    "jpeg",
    "png",
] } # Add the types you want support for

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
mimalloc = "0.1.43"
tracing = "0.1"
tracing-subscriber = "0.2"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4.42"

# to access the DOM (to hide the loading text)
[target.'cfg(target_arch = "wasm32")'.dependencies.web-sys]
version = "0.3.69"

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
